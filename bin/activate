# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

ENV_NAME="smsk" # name your environment

# Rationale of deactivate:
# if $_OLD_VARIABLE exists:
#    overwrite $VARIABLE with $_OLD_VARIABLE and export
#    destroy $_OLD_VARIABLE
# else:
#    destroy $VARIABLE
# fi

deactivate () {

    # reset old environment variables
    # ! [ -z ${VAR+_} ] returns true if VAR is declared at all
    if ! [ -z "${_OLD_VIRTUAL_PATH+_}" ] ; then
        PATH="$_OLD_VIRTUAL_PATH"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi
    if ! [ -z "${_OLD_MANPATH+_}" ] ; then # brew additions
        MANPATH="$_OLD_MANPATH"
        export MANPATH
        unset _OLD_MANTPATH
    fi
    if ! [ -z "${_OLD_INFOPATH+_}" ] ; then # brew additions
        INFOPATH="$_OLD_INFOPATH"
        export INFOPATH
        unset _OLD_INFOPATH
    fi
    if ! [ -z "${_OLD_GEM_HOME+_}"] ; then # gem additions
        GEM_HOME="$_OLD_GEM_HOME"
        export GEM_HOME
        unset _OLD_GEM_HOME
    fi
    if ! [ -z "${_OLD_GEM_PATH+_}"] ; then # gem additions
        GEM_PATH="$_OLD_GEM_PATH"
        export GEM_PATH
        unset _OLD_GEM_PATH
    fi
    if ! [ -z "${_OLD_PERL5LIB+_}"] ; then # perl additions
        PERL5LIB="$_OLD_PERL5LIB"
        export PERL5LIB
        unset _OLD_PERL5LIB
    fi
    if ! [ -z "${_OLD_PERL_CPANM_OPT+_}"] ; then # perl additions
        PERL_CPANM_OPT="$_OLD_PERL_CPANM_OPT"
        export PERL_CPANM_OPT
        unset _OLD_PERL_CPANM_OPT
    fi
    if ! [ -z "${_OLD_LD_LIBRARY_PATH+_}"] ; then # lib additions
        LD_LIBRARY_PATH="$_OLD_LD_LIBRARY_PATH"
        export LD_LIBRARY_PATH
        unset _OLD_LD_LIBRARY_PATH
    fi
    if ! [ -z "${_OLD_R_LIBS_USER+_}"] ; then # lib additions
        R_LIBS_USER="$_OLD_R_LIBS_USER"
        export R_LIBS_USER
        unset _OLD_R_LIBS_USER
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
        hash -r 2>/dev/null
    fi

    if ! [ -z "${_OLD_VIRTUAL_PS1+_}" ] ; then
        PS1="$_OLD_VIRTUAL_PS1"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi


    if [ ! "${1-}" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
        unset ENV_NAME
    fi


}

# unset irrelevant variables
deactivate nondestructive


# Rationale
# if variable already exists:
#    store old
#    expand and export
# else
#    create and export
# fi

# Create a ps1 consiting of (ENV_NAME) PS1
if [ -z "${VIRTUAL_ENV_DISABLE_PROMPT-}" ] ; then
    _OLD_VIRTUAL_PS1="$PS1"
    if [ "x" != x ] ; then
        PS1="$PS1"
    else
        PS1="($ENV_NAME) $PS1"
    fi
    export PS1
fi


# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "${BASH-}" ] || [ -n "${ZSH_VERSION-}" ] ; then
    hash -r 2>/dev/null
fi


# Now come my additions

# bin paths - PATH IS ALWAYS DE
_OLD_VIRTUAL_PATH="$PATH"
PATH="${PWD}/bin:${PWD}/.linuxbrew/bin:$PATH"
export PATH
# if ! [ -z "${PATH+_}" ] ; then
#     _OLD_PATH="${PATH}"
#     export PATH="${PWD}/.linuxbrew/bin:${PATH}"
# else
#     export PATH="${PWD}/.linuxbrew/bin"
# fi





# .lib paths
if ! [ -z "${LD_LIBRARY_PATH+_}" ] ; then
    _OLD_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
    mkdir -p .lib
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$PWD/.lib"
else
    LD_LIBRARY_PATH="$PWD/.lib"
fi

# Brew paths
if ! [ -z "${MANPATH+_}" ] ; then
    _OLD_MANPATH="$MANPATH"
    export MANPATH="$PWD/.linuxbrew/share/man:$MANPATH"
else
    export MANPATH="$PWD/.linuxbrew/share/man"
fi
if ! [ -z "${INFOPATH+_}" ] ; then
    _OLD_INFOPATH="$INFOPATH"
    export INFOPATH="$PWD/.linuxbrew/share/info:$INFOPATH"
else
    export INFOPATH="$PWD/.linuxbrew/share/info"
fi
# Python paths

# Ruby/Gem paths
# export PATH="$PWD/.gem/bin:$PATH"
if ! [ -z "${GEM_HOME+_}" ] ; then
    _OLD_GEM_HOME="$GEM_HOME"
    export GEM_HOME="$PWD/.gem:$GEM_HOME"
else
    export GEM_HOME="$PWD/.gem"
fi
if ! [ -z "${GEM_PATH+_}" ] ; then
    _OLD_GEM_PATH="$GEM_PATH"
    export GEM_PATH="$PWD/.gem:$GEM_PATH"
else
    export GEM_PATH="$PWD/.gem"
fi

# Perl5 paths
if ! [ -z "${PERL5LIB+_}" ] ; then
    _OLD_PERL5LIB="$PERL5LIB"
    export PERL5LIB="$PWD/.linuxbrew/lib/perl5/site_perl:$PERL5LIB"
else
    export PERL5LIB="$PWD/.linuxbrew/lib/perl5/site_perl"
fi
if ! [ -z "${PERL_CPANM_OPT+_}" ] ; then
    _OLD_PERL_CPANM_OPT="$PERL_CPANM_OPT"
    export PERL_CPANM_OPT="--prompt --reinstall -l $(echo $PERL5LIB | cut -f 1 -d ":") --mirror  https://cpan.metacpan.org"
else
    export PERL_CPANM_OPT="--prompt --reinstall -l $(echo $PERL5LIB | cut -f 1 -d ":") --mirror  https://cpan.metacpan.org"
fi

# R paths
if ! [ -z "${R_LIBS_USER+_}" ] ; then
    _OLD_R_LIBS_USER="$R_LIBS_USER"
    export R_LIBS_USER="$PWD/.lib/R:$R_LIBS_USER"
else
    export R_LIBS_USER="$PWD/.lib/R"
fi
